<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tarena.ht.mapper.DeptMapper">
	<!--namespace:唯一标识映射文件的  -->
	
	<!--查询部门列表信息  -->
	<select id="findAll" resultMap="deptRM">
	select * from 
	dept_p d
	       left join
	(select dept_id p_id,dept_name p_name from dept_p) p
	       on d.parent_id = p.p_id
	order by dept_id
	</select>
	
	<!--将结果集进行封装  -->
	<resultMap type="Dept" id="deptRM" autoMapping="true">
		<id column="dept_id" property="deptId"/>
		
		<!--一对一关联映射  -->
		<association property="parentDept" javaType="Dept">
			<id column="p_id" property="deptId"/>
			<result column="p_name" property="deptName"/>
		</association>
	</resultMap>
	
	
	<!--根据deptId查询部门信息  
		collection中只写   
		array:数组
		list: list集合
		map<ids,value>  map中的key
	-->
	<delete id="deleteDepts">
		delete from dept_p where dept_id in(
			<!--循环遍历输入Id  -->
			<foreach collection="array" item="id" separator=",">
				#{id}
			</foreach>
		)
	</delete>
	
	
	<!--修改状态  -->
	<update id="updateState">
		update dept_p set state = #{state} where dept_id in (
			<!--首先从map中获取数据 String[] ids={100,100100} 
				collection="map中的key"
			 -->
			<foreach collection="deptIds" item="id" separator=",">
				#{id}	
			</foreach>
		)
	</update>
	
	
	<select id="findParentList" resultType="Dept">
		select * from dept_p
	</select>
	
	<!--部门的新增  -->
	<insert id="saveDept">
		insert into dept_p(dept_id,parent_id,dept_name,state) 
		values(
			#{deptId},#{parentDept.deptId},#{deptName},#{state}
		)
	</insert>
	
	
	<!--查询单个部门对象  -->
	<select id="findDeptById" resultMap="deptRM">
		select * from 
	dept_p d
	       left join
	(select dept_id p_id,dept_name p_name from dept_p) p
	       on d.parent_id = p.p_id
	where dept_id = #{deptId}
	</select>
	
	<select id="findParentRemove" resultType="Dept">
		select * from dept_p where dept_id not in (#{deptId})
	</select>
	
	
	
	<update id="updateDept">
		update dept_p set 
		dept_name=#{deptName},
		parent_id=#{parentDept.deptId},
		state = #{state}
		where dept_id = #{deptId}
	</update>
	
	
	
	
</mapper>
